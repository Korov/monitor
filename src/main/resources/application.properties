quarkus.http.port=8091
quarkus.log.level=INFO
quarkus.log.file.enable=true
quarkus.log.file.path=./logs/monitor.log
quarkus.log.file.level=INFO
quarkus.log.file.rotation.max-backup-index=5
quarkus.log.file.rotation.max-file-size=100M
#quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n
quarkus.log.console.enable=true
quarkus.log.console.level=INFO
#quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss.SSS} [%t-%L] %highlight{%-5level} %logger{36} - %msg%n
# configure your datasource
quarkus.datasource.db-kind=mysql
quarkus.datasource.username=monitor
quarkus.datasource.password=monitor
quarkus.datasource.jdbc=false
quarkus.datasource.reactive=true
quarkus.datasource.reactive.max-size=10
quarkus.datasource.reactive.url=vertx-reactive:mysql://localhost:3309/monitor?useSSL=false&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=update
# this is for websocket
quarkus.websocket.dispatch-to-worker=true

# reactive websocket config
mp.messaging.incoming.incoming-costs.connector=quarkus-websocket
# the incoming-costs channel will be fed via a Web Socket endpoint on the `/costs` path
mp.messaging.incoming.incoming-costs.path=/costs

mp.messaging.outgoing.outgoing-costs.connector=quarkus-websocket
# the WebSockets are exposed on the same port as HTTP
mp.messaging.outgoing.outgoing-costs.url=ws://localhost:${quarkus.http.port}/cost-collector

mp.messaging.incoming.collector.path=/cost-collector
mp.messaging.incoming.collector.connector=quarkus-websocket
